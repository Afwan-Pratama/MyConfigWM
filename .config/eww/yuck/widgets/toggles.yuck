(defwidget small_toggle [state icon toggle_action] (button
    :class "toggle small ${state == "on" ? "active" : ""}"
    :onclick toggle_action
    (overlay (box) (label  :class "icon" :valign "center" :text icon))
))

(defwidget arrow_toggle [state icon toggle_action arrow_action] (box
    :class "toggle arrow ${state == "on" ? "active" : ""}"
    :orientation "h"
    :valign "center"
    :space-evenly false
    (button :class "half"
        :onclick toggle_action
        :hexpand true
        (overlay (box)(label :class "icon indicator" :valign "center" :text icon)))
    (box :class "separator" :valign "center")
    (button :class "half"
        :onclick arrow_action
        :hexpand true
        (overlay (box) (label :class "icon arrow" :valign "center" :text "î­°")))
))

; arrow_toggles
(defwidget arrow_toggle_wifi [] (arrow_toggle
    :state {network.wifi.state}
    :icon {network.wifi.icon}
    :arrow_action "${EWW_CONFIG_DIR}/scripts/launcher network"
    :toggle_action "${EWW_CONFIG_DIR}/scripts/network toggle"))

; small_toggles
(defwidget small_toggle_dnd [] (small_toggle   
    :state {notifications.dnd.state}
    :icon  {notifications.dnd.icon}
    :toggle_action "${EWW_CONFIG_DIR}/scripts/notifications toggle"))

(defwidget small_toggle_mute [] (small_toggle
    :state {volume.mute.state}
    :icon  {volume.mute.icon}
    :toggle_action "${EWW_CONFIG_DIR}/scripts/volume mute_toggle"))

(defwidget small_toggle_dark_mode [] (small_toggle 
    :state {theme.state}
    :icon  {theme.icon}
    :toggle_action "${EWW_CONFIG_DIR}/scripts/theme toggle"))

(defwidget small_toggle_network [] (small_toggle
    :state {network.wifi.state}
    :icon {network.wifi.icon}
    :toggle_action "${EWW_CONFIG_DIR}/scripts/launcher network"))


